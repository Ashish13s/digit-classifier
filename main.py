# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w9ig8Ko4jm_munsn60-or5KgxYhHgC0x
"""

import numpy as np
from tensorflow import keras
from tensorflow.keras import layers

(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()

x_train.shape

x_train = x_train.astype("float32") / 255
x_test = x_test.astype("float32") / 255

x_train[0]

x_train[0].shape

x_train = np.expand_dims(x_train, -1)
x_test = np.expand_dims(x_test, -1)

model = keras.Sequential([
    keras.layers.Conv2D(32,(3,3),activation = "relu",input_shape = (28,28,1)),
    keras.layers.Conv2D(64,(3,3),activation = "relu"),
    keras.layers.MaxPooling2D((2,2)),
    keras.layers.Conv2D(72,(3,3),activation = "relu"),
    keras.layers.Conv2D(100,(3,3),activation = "relu"),
    keras.layers.MaxPooling2D((2,2)),
    keras.layers.Flatten(),
    keras.layers.Dense(100,activation = "relu"),
    keras.layers.Dense(10,activation = "softmax")
])

model.summary()

model.compile(optimizer = "adam",loss = "sparse_categorical_crossentropy",metrics = ["accuracy"])

model.fit(x_train,y_train,epochs = 10)

model.evaluate(x_test,y_test)

model.save("model.h5")

